#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
#define ss second
#define ff first
int x[1000][1000];
vector<vector<pair<ll,ll>>>v(100005);
ll cost[1000][1000],vis[1000][1000];
pair<int,pair<int,int>>p[100007];
int pa[100007];
int dx[]={1,-1,0,0};
int dy[]={0,0,1,-1},n,m;
bool valid(int a,int b)
{
    return (a<n&&a>=0&&b>=0&&b<m);
}
void dij()
{
 for(int i=0;i<n;i++)
{
    for(int j=0;j<m;j++)
    {
        cost[i][j]=1000000;
    }
}
priority_queue<pair<int,pair<int,int>>>q;
q.push(make_pair(x[0][0],make_pair(0,0)));
cost[0][0]=x[0][0];
while(!q.empty())
{
    int a=-q.top().first,b=q.top().second.first,c=q.top().second.second;
    q.pop();
    for(int i=0;i<4;i++)
    {
        if(!valid(b+dx[i],c+dy[i]))continue;
        int newx=b+dx[i],newy=c+dy[i];
        if(cost[b][c]+x[newx][newy]<cost[newx][newy])
        {
            cost[newx][newy]=cost[b][c]+x[newx][newy];
            q.push(make_pair(-cost[newx][newy],make_pair(newx,newy)));
        }

    }

}


}

int main()
{
    int T;
    cin>>T;
    while(T--){
cin>>n>>m;
for(int i=0;i<n;i++)
{
    for(int j=0;j<m;j++)
    {
        cin>>x[i][j];
        vis[i][j]=0;
    }
}
  dij();
  cout<<cost[n-1][m-1]<<endl;
    }
    return 0;
}
