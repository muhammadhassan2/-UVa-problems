#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
int c=0;
void mergee(int x[],int s,int mid,int e)
{

    int p=s,k=0,q=mid+1,A[e-s+1];
    int aa=mid-s+1,g=0;
    for(int i=s;i<=e;i++)
    {
        if(p>mid)
        {
            A[k++]=x[q++];

        }
        else if(q>e)
        {
            A[k++]=x[p++];
        }
        else if(x[p]<x[q])
        {
            A[k++]=x[p++];
            g++;
        }
        else {
        c+=aa-g;
        A[k++]=x[q++];
        }

    }
    for(int i=0;i<k;i++)
    {

        x[s++]=A[i];
    }
}
void merge_sort(int x[],int s,int e)
{
    if(s<e)
    {
        int mid=(s+e)/2;
        merge_sort(x,s,mid);
        merge_sort(x,mid+1,e);
        mergee(x,s,mid,e);


    }
}
int main()
{
    int t;


    int n;
    while(cin>>n&&n){

int x[n+1];//={5,7,1,6,3,5,0,12,3,9};
for(int i=0;i<n;i++)cin>>x[i];
merge_sort(x,0,n-1);
//printf("Optimal train swapping takes %d swaps.\n",c);
if(c%2!=0)cout<<"Marcelo";
else cout<<"Carlos";
cout<<endl;
c=0;
    }
    return 0;
}
